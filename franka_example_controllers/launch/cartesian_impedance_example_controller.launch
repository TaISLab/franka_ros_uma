<?xml version="1.0" ?>
<launch>
  <arg name="robot" default="panda" doc="choose your robot. Possible values: [panda, fr3]"/>
  <arg name="arm_id" default="$(arg robot)" />

  <!-- Configuración del ROS Master -->
  <env name="ROS_MASTER_URI" value="http://192.168.1.17:11311" />
  <env name="ROS_HOSTNAME" value="192.168.1.188:11311" />

  <!-- Iniciar los nodos en la máquina remote -->
  <machine name="remote" address="ROS_HOSTNAME" default="true" />
  
  <!-- Incluir el archivo de lanzamiento de control de Franka -->
  <include file="$(find franka_control)/launch/franka_control.launch" pass_all_args="true"/>
  
  <!-- Cargar los parámetros del controlador -->
  <rosparam command="load" file="$(find franka_example_controllers)/config/franka_example_controllers.yaml" subst_value="true" />
  
  <!-- Nodo para iniciar el controlador -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="cartesian_impedance_example_controller"/>
  
  <!-- Nodo para iniciar RViz en la máquina remote -->
  <node pkg="rviz" type="rviz" output="screen" name="rviz" args="-d $(find franka_example_controllers)/launch/rviz/franka_description_with_marker.rviz -f $(arg arm_id)_link0 --splash-screen $(find franka_visualization)/splash.png" machine="remote"/>
  
    <!-- Nodo para los marcadores interactivos -->
  <node name="interactive_marker" pkg="franka_example_controllers" type="interactive_marker.py" required="true" output="screen">
    <param name="link_name" value="$(arg arm_id)_link0" />
    <remap from="equilibrium_pose" to="/cartesian_impedance_example_controller/equilibrium_pose" />
  </node>

  <!-- Nodo para la configuración dinámica -->
  <node name="rqt_reconfigure" pkg="rqt_reconfigure" type="rqt_reconfigure" required="false" machine="remote"/>

  </launch>
